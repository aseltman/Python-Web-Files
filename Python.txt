https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/2020-06-10.xls?client=GUI

https://www.treasurydirect.gov/govt/reports/pd/mspd/2020/opdx052020.xls (LOCATED HERE: https://www.treasurydirect.gov/govt/reports/pd/mspd/2020/2020_may.htm)

#This is for the Treasury file.

import requests

from datetime import date, timedelta
currentdate = date.today()
current_report_month = currentdate.replace(day=1) - timedelta(1)  
prior_report_month = current_report_month.replace(day=1) - timedelta(1)   
prior_report_period = prior_report_month.strftime("%m%Y")    
current_report_period = current_report_month.strftime("%m%Y")

print('Beginning file download with requests')

get_url_current='https://www.treasurydirect.gov/govt/reports/pd/mspd/2020/opdx' + (current_report_period) + '.xls'
get_url_prior='https://www.treasurydirect.gov/govt/reports/pd/mspd/2020/opdx' + (prior_report_period) + '.xls'

url_current = (get_url_current)
url_prior = (get_url_prior)

#print (url_current)
#print (url_prior)

#This determines if the derived URLs are real
response_current=requests.get(url_current)
response_current.status_code
response_prior=requests.get(url_prior)
response_prior.status_code
#This if elif takes the results of the first correct one to get the most current file
if response_current.status_code == 200:
    url=(url_current)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestTREASURYcurrent.xls', 'wb') as f:
        f.write(r.content)
elif response_prior.status_code == 200:
    url=(url_prior)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestTREASURYcurrent.xls', 'wb') as f:
        f.write(r.content)
elif response.status_code == 404:
    print('File Not Found.')

print('Completed file download with requests')





#This is used for the Fed file.  

import requests

from datetime import date, timedelta
current_date = date.today()
new_date1 = current_date - timedelta(days=1)
new_date2 = current_date - timedelta(days=2)
new_date3 = current_date - timedelta(days=3)
new_date4 = current_date - timedelta(days=4)
new_date5 = current_date - timedelta(days=5)
new_date6 = current_date - timedelta(days=6)
new_date7 = current_date - timedelta(days=7)
new_date8 = current_date - timedelta(days=8)
current_date = current_date.strftime("%Y-%m-%d")
report_date1 = new_date1.strftime("%Y-%m-%d")
report_date2 = new_date2.strftime("%Y-%m-%d")
report_date3 = new_date3.strftime("%Y-%m-%d")
report_date4 = new_date4.strftime("%Y-%m-%d")
report_date5 = new_date5.strftime("%Y-%m-%d")
report_date6 = new_date6.strftime("%Y-%m-%d")
report_date7 = new_date7.strftime("%Y-%m-%d")
report_date8 = new_date8.strftime("%Y-%m-%d")

print('Beginning file download with requests')

get_url_current='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (current_date) + '.xls'
get_url_date1='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date1) + '.xls'
get_url_date2='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date2) + '.xls'
get_url_date3='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date3) + '.xls'
get_url_date4='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date4) + '.xls'
get_url_date5='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date5) + '.xls'
get_url_date6='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date6) + '.xls'
get_url_date7='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date7) + '.xls'
get_url_date8='https://markets.newyorkfed.org/api/soma/non-mbs/get/ALL/asof/' + (report_date8) + '.xls'

url_current = (get_url_current)
url_date1 = (get_url_date1)
url_date2 = (get_url_date2)
url_date3 = (get_url_date3)
url_date4 = (get_url_date4)
url_date5 = (get_url_date5)
url_date6 = (get_url_date6)
url_date7 = (get_url_date7)
url_date8 = (get_url_date8)

#print (url_current)
#print (url_date1)
#print (url_date2)
#print (url_date3)
#print (url_date4)
#print (url_date5)
#print (url_date6)
#print (url_date7)
#print (url_date8)


#This determines if the derived URLs are real
response_current=requests.get(url_current)
response_current.status_code
response_date1=requests.get(url_date1)
response_date1.status_code
response_date2=requests.get(url_date2)
response_date2.status_code
response_date3=requests.get(url_date3)
response_date3.status_code
response_date4=requests.get(url_date4)
response_date4.status_code
response_date5=requests.get(url_date5)
response_date5.status_code
response_date6=requests.get(url_date6)
response_date6.status_code
response_date7=requests.get(url_date7)
response_date7.status_code
response_date8=requests.get(url_date8)
response_date8.status_code
#This if elif takes the results of the first correct one to get the most current file
if response_current.status_code == 200:
    url=(url_current)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFEDcurrent.xls', 'wb') as f:
        f.write(r.content)
elif response_date1.status_code == 200:
    url=(url_date1)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFE1D.xls', 'wb') as f:
        f.write(r.content)
elif response_date2.status_code == 200:
    url=(url_date2)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED2.xls', 'wb') as f:
        f.write(r.content)
elif response_date3.status_code == 200:
    url=(url_date3)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED3.xls', 'wb') as f:
        f.write(r.content)
elif response_date4.status_code == 200:
    url=(url_date4)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED4.xls', 'wb') as f:
        f.write(r.content)
elif response_date5.status_code == 200:
    url=(url_date5)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED5.xls', 'wb') as f:
        f.write(r.content)
elif response_date6.status_code == 200:
    url=(url_date6)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED6.xls', 'wb') as f:
        f.write(r.content)
elif response_date7.status_code == 200:
    url=(url_date7)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED7.xls', 'wb') as f:
        f.write(r.content)
elif response_date8.status_code == 200:
    url=(url_date8)
    r = requests.get(url)
    with open('/Users/alise/Downloads/TestFED8.xls', 'wb') as f:
        f.write(r.content)        
elif response.status_code == 404:
    print('File Not Found.')


print('Completed file download with requests')
